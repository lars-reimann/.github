name: Test Poetry Project and Upload Coverage to Codecov (Reusable)

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Working directory to use'
        required: true
        type: string
      python-version:
        description: 'Python version to use'
        required: true
        type: string
      module-name:
        description: 'Name of the module to build'
        required: true
        type: string
      coverage:
        description: 'Whether to upload coverage to Codecov'
        required: false
        type: boolean
        default: true
    secrets:
      CODECOV_TOKEN:
        description: 'Codecov token'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3.2.3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Test with pytest
        if: ${{ !inputs.coverage }}
        run: poetry run pytest --doctest-modules

      # Requires installation of pytest and pytest-cov
      - name: Test with pytest and compute coverage
        if: ${{ inputs.coverage }}
        run: poetry run pytest --doctest-modules --cov=${{ inputs.module-name }} --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: ${{ inputs.coverage }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ inputs.working-directory }}
          files: coverage.xml
