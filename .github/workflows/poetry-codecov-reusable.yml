name: Test Poetry Project and Upload Coverage to Codecov (Reusable)

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Working directory to use'
        required: true
        type: string
      python-version:
        description: 'Python version to use'
        required: true
        type: string
      platform:
        description: 'The platform to run on'
        required: false
        type: string
        default: ubuntu-latest
      module-name:
        description: 'Name of the module to build. Must be provided if coverage is enabled.'
        required: false
        type: string
      coverage:
        description: 'Whether to upload coverage to Codecov'
        required: false
        type: boolean
        default: true
    secrets:
      CODECOV_TOKEN:
        description: 'Codecov token'
        required: false

jobs:
  build:
    runs-on: ${{ inputs.platform }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'poetry'

      - name: Install Python dependencies
        run: poetry install --no-interaction

      - name: Test with pytest
        if: ${{ !inputs.coverage }}
        run: poetry run pytest --doctest-modules

      # Requires installation of pytest and pytest-cov
      - name: Test with pytest and compute coverage
        if: ${{ inputs.coverage }}
        run: poetry run pytest --doctest-modules --cov=${{ inputs.module-name }} --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: ${{ inputs.coverage }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ inputs.working-directory }}
          files: coverage.xml
